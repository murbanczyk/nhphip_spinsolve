##############################################################
# This procedure protects the procedures after
# interfaceDescrition from being overwritten when compiling
##############################################################

procedure(status)

endproc("readonly")


##############################################################
# This procedure describes the experiment parameter
# user interface. This is autogenerated from the pulse program
# interface list. Do not modify manually
##############################################################

procedure(status)

endproc("readonly")

procedure(interfaceDescription)

   interface = [
      "exptDiv","IR_bubble_1D_SEPP_WET","dv","protonHelp","",
      "nucleus","Nucleus","tb","readonly_string","",
      "b1Freq1H","1H frequency (MHz)","tb","double","[1,400]",
      "centerFreqPPM","Centre frequency (ppm)","tb","float","",
      "90Amplitude1H","Pulse amplitude (dB)","tb","float","[-85,0]",
      "ShapedAmplitude","ShapedRF amplitude (dB)","tb","float","[-85,0]",
      "tableButAmp","Select Amp. shapedrf file","bt","string","getTableFileAmp",
      "tableFileNameAmp","Amplitude shapedrf file","tb","string","",
      "tableButPh","Select Phase shapedrf file","bt","string","getTableFilePhase",
      "tableFileNamePh","Phase shapedrf file","tb","string","",
      "pulseLength1H","Pulse length (us)","tb","float","[0.5,1000]",
      "dd1","d1 delay (ms)","tb","float","",
      "p16","red.grad. fin. echo  [ms]","tb","float","",
      "del16","red.del.grad.fin.[ms]","tb","float","",
      "p19","gradient length [ms]","tb","float","",
      "del19","Delay grad recovery [ms]","tb","float","",
      "shaplength","Lenght of shapedRF [ms]","tb","float","[0.5,1000]",
      "shapepoints","No pts shapedRF","tb","integer","[1,1e8]",
      "cnst1","J(HH)","tb","float","",
      "gradMax","Max. gradient mT/m","tb","float","[0,2000]",
      "gradAmpPC3","Gradient Amp gp3 (%)","tb","float","[-100,100]",
      "gradAmpPC4","Gradient Amp gp4 (%)","tb","float","[-100,100]",
      "gradAmpPC5","Gradient Amp gp5 (%)","tb","float","[-100,100]",
      "b1Freq13C","13C Freq (MHz)","tb","double","[1,400]",
      "centerFreq13CPPM","Centre freq 13C (ppm)","tb","float","",
      "pulseLengthH90","90 Pulse Dur (us)","tb","float","[0.5,1000]",
      "amplitudeH90","90 Pulse Amp (dB)","tb","float","[-85,0]",
      "pulseLengthC180","Dec length 180 (us)","tb","float","[0.5,1000]",
      "shiftPoints","Nr of points to shift","tb","float","[-100,100]",
      "dummyScans","Nr of dummy scans","tb","integer","[0,16]",
      "repTime","Repetition time (ms)","tb","float","[1,1e+008]",
      "spoilAmpWet","Spoil Amp   WET","tb","float","[1,32000]",
      "spoilDurWet","Spoil Dur   WET (us)","tb","float","[2,327670]",
      "gradStabWet","Spoil Stab  WET (us)","tb","float","[2,327670]",
      "decoupleAcq","13C   Dec   Acq?","cb","string","no,yes",
      "decouplePre","13C   Dec   Presat?","cb","string","no,yes",
      "decoupleAmpAcq","Dec Amp. Acq.  (dB)","tb","float","[-85,0]",
      "decoupleAmpPre","Dec Amp Presat (dB)","tb","float","[-85,0]",
      "pulseLengthPs","Presat length (ms)","tb","float","[0,1e4]",
      "Osup1","Presat freq 1 (ppm)","tb","float","[-1e6,1e6]",
      "Osup2","Presat freq 2 (ppm)","tb","float","[-1e6,1e6]",
      "Osup3","Presat freq 3 (ppm)","tb","float","[-1e6,1e6]",
      "aSoft90","Pulse 90 Soft Amp (dB)","tb","float","[-85,-16]",
      "useSup1","Use 1","cb","string","no,yes",
      "useSup2","Use 2","cb","string","no,yes",
      "useSup3","Use 3","cb","string","no,yes",
      "supAmp","Sup  Grad. Amp","tb","float","[-32e3,32e3]",
      "supOffset","Sup  offset (Hz)","tb","float","",
      "supAmplitude","Sup. Pulse Amp (dB)","tb","float","[-85,0]",
      "supDuration","Sup. Pulse Dur (ms)","tb","float","[0,50000]",
      "supRange","Freq sweep range (kHz)","tb","float","[-10,10]",
      "acquDiv","Acquisition","dv","acqHelp","",
      "rxGain","Receiver gain","tm","integer","[-20:3:70]",
      "rxChannel","Receiver channel","tm","string","[\"1H\"]",
      "rxPhase","Receiver phase","tb","float","[-360,360]",
      "nrPnts","Number of points","tm","integer","[4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768]",
      "dwellTime","Dwell time (us)","tm","float","[0.5,1,2,5,10,20,50,100,200,500,1000,2000]",
      "nrScans","Number of scans","tb","float","[1,1e8]",
      "flatFilter","Flat filter","cb","string","no,yes",
      "accumulate","Accumulate data","cb","string","no,yes",
      "usePhaseCycle","Phase cycle","cb","string","no,yes",
      "bandwidth","Bandwidth (kHz)","tb2","float","",
      "acqTime","Acquisition time (ms)","tb","float","",
      "procDiv","Processing","dv","procHelp","",
      "zf","Zero fill factor?","tm","integer","[1,2,4,8,16]",
      "filter","Apodisation filter?","cb","string","no,yes",
      "filterType","Filter type","tm","string","[\"none\",\"exp:1\"]",
      "tdPhaseCorr","Time. domain phasing","tm","string","[\"autophase\",\"mag\",\"none\"]",
      "fdPhaseCorr","Freq. domain phasing","tm","string","[\"autophase\",\"mag\",\"none\"]",
      "dispDiv","Display","dv","dispHelp","",
      "usePPMScale","Use ppm scale?","cb","string","no,yes",
      "dispRangeMinPPM","Minimum ppm value","tb","float","[-2000,2000]",
      "dispRangeMaxPPM","Maximum ppm value","tb","float","[-2000,2000]",
      "dispRange","Display range (Hz)","tb","float","[0,2e6]",
      "filesDiv","Files","dv","fileHelp","",
      "saveData","Save data?","cb","string","false,true"]

endproc(interface)


#####################################################
# Organise plots for running and loading experiments
# Each row has quoted plot names separated by a semicolon
# Allowable plot names are ptx or imx. (x = 1,2 ...)
# Can have up to 6 plots for 1D 4 for 2D.
#####################################################

procedure(plot_run_layout)

   layout = ["pt1";
             "pt2"]

endproc(layout)


procedure(plot_load_layout)

   layout = ["pt1";
             "pt2"]

endproc(layout)

#####################################################
# Defines the buttons which will appear to the 
# right of the plots below the default buttons.
# If 'null' is returned or this proceudre is missing
# then only default controls will be added.
# Controls may be defined as structure array. 
# Each line defines one button and  must end with
# a seimcolon. Parameters for each button
# are separated by commas.
# All quotes must be correctly escaped if inside
# a string.
# If only one item is in the list it must end in a 
# semicolon to make it a structure array.
#####################################################


procedure(processing_controls)

   layout = struct(buttonLabel = "SNR",     plotName = "pt1", macroToRun = "snrSpectrum()";
                   buttonLabel = "FT",      plotName = "pt1", macroToRun = "apodizeNTransform(\"pt1\",\"pt2\")";
                   buttonLabel = "Phase",   plotName = "pt2", macroToRun = "manualPhase1DSpecial()";
                   buttonLabel = "Apodize", plotName = "pt2", macroToRun = "apodizeFreq(\"pt1\",\"pt2\")";
                   buttonLabel = "SNR",     plotName = "pt2", macroToRun = "snrSpectrum()";
                   buttonLabel = "ppm/Hz",  plotName = "pt2", macroToRun = "togglePPM_Hz(1)";
                   buttonLabel = "Calib.",  plotName = "pt2", macroToRun = "calibrateXAxis()";
                   buttonLabel = "MNova",   plotName = "pt1", macroToRun = "exportMNova(\"pt1\")";
                   buttonLabel = "MNova",   plotName = "pt2", macroToRun = "exportMNova(\"pt1\")";
                   buttonLabel = "Integ.",  plotName = "pt2", macroToRun = "PeakIntegration(\"pt2\")")

endproc(layout)


